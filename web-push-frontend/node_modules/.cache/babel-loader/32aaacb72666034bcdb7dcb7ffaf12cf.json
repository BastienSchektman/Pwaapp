{"ast":null,"code":"var _jsxFileName = \"/Users/bastienschektman/Downloads/reactFront&BackavecSW 2/web-push-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SimpleForm from './components/SimpleForm';\nimport * as serviceWorker from './serviceWorker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Enregistrement du service worker\n    const wb = serviceWorker.register({\n      onSuccess: () => {\n        console.log('Service Worker enregistré avec succès');\n        toast.success('Application prête pour le mode hors ligne');\n      },\n      onUpdate: () => {\n        toast.info('Mise à jour disponible. Veuillez rafraîchir.');\n      }\n    });\n\n    // Configuration des gestionnaires d'événements pour les toasts\n    if (navigator.serviceWorker.controller) {\n      navigator.serviceWorker.addEventListener('message', event => {\n        if (event.data && event.data.type === 'REQUEST_QUEUED') {\n          toast.info('Requête enregistrée et sera envoyée dès que possible.');\n        } else if (event.data && event.data.type === 'SYNC_COMPLETED') {\n          toast.success(`${event.data.count} requête(s) synchronisée(s) avec succès!`);\n        } else if (event.data && event.data.type === 'monevenementcustom') {\n          const notificationData = event.data.payload;\n          toast(/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [notificationData.title && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: notificationData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: notificationData.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this));\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","logo","ToastContainer","toast","SimpleForm","serviceWorker","jsxDEV","_jsxDEV","App","_s","wb","register","onSuccess","console","log","success","onUpdate","info","navigator","controller","addEventListener","event","data","type","count","notificationData","payload","children","title","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","body","className","_c","$RefreshReg$"],"sources":["/Users/bastienschektman/Downloads/reactFront&BackavecSW 2/web-push-frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SimpleForm from './components/SimpleForm';\nimport * as serviceWorker from './serviceWorker';\n\nfunction App() {\n  useEffect(() => {\n    // Enregistrement du service worker\n    const wb = serviceWorker.register({\n      onSuccess: () => {\n        console.log('Service Worker enregistré avec succès');\n        toast.success('Application prête pour le mode hors ligne');\n      },\n      onUpdate: () => {\n        toast.info('Mise à jour disponible. Veuillez rafraîchir.');\n      }\n    });\n\n    // Configuration des gestionnaires d'événements pour les toasts\n    if (navigator.serviceWorker.controller) {\n      navigator.serviceWorker.addEventListener('message', (event) => {\n        if (event.data && event.data.type === 'REQUEST_QUEUED') {\n          toast.info('Requête enregistrée et sera envoyée dès que possible.');\n        } else if (event.data && event.data.type === 'SYNC_COMPLETED') {\n          toast.success(`${event.data.count} requête(s) synchronisée(s) avec succès!`);\n        } else if (event.data && event.data.type === 'monevenementcustom') {\n          const notificationData = event.data.payload;\n          toast(\n            <div>\n              {notificationData.title && <div style={{ fontWeight: 'bold' }}>{notificationData.title}</div>}\n              <div>{notificationData.body}</div>\n            </div>\n          );\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <SimpleForm />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAEzC,OAAO,WAAW;AAClB,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbT,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,EAAE,GAAGL,aAAa,CAACM,QAAQ,CAAC;MAChCC,SAAS,EAAEA,CAAA,KAAM;QACfC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpDX,KAAK,CAACY,OAAO,CAAC,2CAA2C,CAAC;MAC5D,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAM;QACdb,KAAK,CAACc,IAAI,CAAC,8CAA8C,CAAC;MAC5D;IACF,CAAC,CAAC;;IAEF;IACA,IAAIC,SAAS,CAACb,aAAa,CAACc,UAAU,EAAE;MACtCD,SAAS,CAACb,aAAa,CAACe,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;QAC7D,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,IAAI,KAAK,gBAAgB,EAAE;UACtDpB,KAAK,CAACc,IAAI,CAAC,uDAAuD,CAAC;QACrE,CAAC,MAAM,IAAII,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,IAAI,KAAK,gBAAgB,EAAE;UAC7DpB,KAAK,CAACY,OAAO,CAAC,GAAGM,KAAK,CAACC,IAAI,CAACE,KAAK,0CAA0C,CAAC;QAC9E,CAAC,MAAM,IAAIH,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,IAAI,KAAK,oBAAoB,EAAE;UACjE,MAAME,gBAAgB,GAAGJ,KAAK,CAACC,IAAI,CAACI,OAAO;UAC3CvB,KAAK,cACHI,OAAA;YAAAoB,QAAA,GACGF,gBAAgB,CAACG,KAAK,iBAAIrB,OAAA;cAAKsB,KAAK,EAAE;gBAAEC,UAAU,EAAE;cAAO,CAAE;cAAAH,QAAA,EAAEF,gBAAgB,CAACG;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7F3B,OAAA;cAAAoB,QAAA,EAAMF,gBAAgB,CAACU;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CACP,CAAC;QACH;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAT,QAAA,gBAClBpB,OAAA,CAACL,cAAc;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAelB3B,OAAA,CAACH,UAAU;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACzB,EAAA,CArDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}